###############################
# Core EditorConfig Options   #
###############################

root = true

# All files
[*]
indent_style = space

# Code files
[*.{cs,csx,vb,vbx}]
indent_size = 4
insert_final_newline = true
charset = utf-8-bom

###############################
# .NET Coding Conventions     #
###############################

[*.{cs,vb}]
# Organize usings
dotnet_sort_system_directives_first = true

# this. preferences
dotnet_style_qualification_for_field = false:warning
dotnet_style_qualification_for_property = false:warning
dotnet_style_qualification_for_method = false:warning
dotnet_style_qualification_for_event = false:warning

# Language keywords vs BCL types preferences
dotnet_style_predefined_type_for_locals_parameters_members = true:warning
dotnet_style_predefined_type_for_member_access = true:warning

# Parentheses preferences
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:suggestion
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:suggestion
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:suggestion
dotnet_style_parentheses_in_other_operators = never_if_unnecessary:suggestion

# Modifier preferences
dotnet_style_require_accessibility_modifiers = always:warning
dotnet_style_readonly_field = true:warning

# Expression-level preferences
dotnet_style_object_initializer = true:suggestion
dotnet_style_collection_initializer = true:suggestion
dotnet_style_explicit_tuple_names = true:warning
dotnet_style_null_propagation = true:suggestion
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:suggestion
dotnet_style_prefer_inferred_tuple_names = true:suggestion
dotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion
dotnet_style_prefer_auto_properties = true:silent
dotnet_style_prefer_conditional_expression_over_assignment = true:suggestion
dotnet_style_prefer_conditional_expression_over_return = true:suggestion

###############################
# Naming Conventions          #
###############################

# Style Definitions
dotnet_naming_style.pascal_case_style.capitalization             = pascal_case
dotnet_naming_style.pascal_case_interface_style.capitalization   = pascal_case
dotnet_naming_style.pascal_case_interface_style.required_prefix  = I
dotnet_naming_style.private_pascal_case_style.capitalization     = camel_case
dotnet_naming_style.private_pascal_case_style.required_prefix    = _
dotnet_naming_style.parameter_style.capitalization               = camel_case


# Public members must be capitalized (public_members_must_be_capitalized)
dotnet_naming_rule.public_members_must_be_capitalized.symbols   = public_symbols
dotnet_naming_symbols.public_symbols.applicable_kinds           = property,field,event,delegate
dotnet_naming_symbols.public_symbols.applicable_accessibilities = public,internal,protected

dotnet_naming_rule.public_members_must_be_capitalized.style     = pascal_case_style
dotnet_naming_rule.public_members_must_be_capitalized.severity  = warning

# Public interfaces must be capitalized (publid_interface_must_be_capitalized)
dotnet_naming_rule.publid_interface_must_be_capitalized.symbols = public_interfaces
dotnet_naming_symbols.public_interfaces.applicable_kinds        = interface
dotnet_naming_symbols.public_interfaces.applicable_accessibilities = *

dotnet_naming_rule.publid_interface_must_be_capitalized.style   = pascal_case_interface_style
dotnet_naming_rule.publid_interface_must_be_capitalized.severity= warning

# Private fields must be capitalized with _ (private_fields_must_be_capitalized)
dotnet_naming_rule.private_fields_must_be_capitalized.symbols   = private_fields
dotnet_naming_symbols.private_fields.applicable_kinds           = property,field,event,delegate
dotnet_naming_symbols.private_fields.applicable_accessibilities = private

dotnet_naming_rule.private_fields_must_be_capitalized.style     = private_pascal_case_style
dotnet_naming_rule.private_fields_must_be_capitalized.severity  = warning

# Method must be capitalized (methods_must_be_capitalized)
dotnet_naming_rule.methods_must_be_capitalized.symbols          = methods
dotnet_naming_symbols.methods.applicable_kinds                  = method,class,struct,enum
dotnet_naming_symbols.methods.applicable_accessibilities        = *

dotnet_naming_rule.methods_must_be_capitalized.style            = pascal_case_style
dotnet_naming_rule.methods_must_be_capitalized.severity         = warning

# Parameters must be camelCase (params_must_be_camel)
dotnet_naming_rule.params_must_be_camel.symbols                 = params
dotnet_naming_symbols.params.applicable_kinds                   = paramater
dotnet_naming_symbols.params.applicable_accessibilities         = *

dotnet_naming_rule.params_must_be_camel.style                   = parameter_style
dotnet_naming_rule.params_must_be_camel.severity                = warning

###############################
# C# Code Style Rules         #
###############################

[*.cs]
# var preferences
csharp_style_var_for_built_in_types = true:suggestion
csharp_style_var_when_type_is_apparent = true:suggestion
csharp_style_var_elsewhere = true:suggestion

# Expression-bodied members
csharp_style_expression_bodied_methods = false:none
csharp_style_expression_bodied_constructors = false:none
csharp_style_expression_bodied_operators = false:none
csharp_style_expression_bodied_properties = true:suggestion
csharp_style_expression_bodied_indexers = true:suggestion
csharp_style_expression_bodied_accessors = true:suggestion

# Pattern-matching preferences
csharp_style_pattern_matching_over_is_with_cast_check = true:warning
csharp_style_pattern_matching_over_as_with_null_check = true:warning

# Null-checking preferences
csharp_style_throw_expression = true:suggestion
csharp_style_conditional_delegate_call = true:suggestion

# Modifier preferences
csharp_preferred_modifier_order = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async:suggestion

# Expression-level preferences
csharp_prefer_braces = true:warning
csharp_style_deconstructed_variable_declaration = true:suggestion
csharp_prefer_simple_default_expression = true:suggestion
csharp_style_pattern_local_over_anonymous_function = true:suggestion
csharp_style_inlined_variable_declaration = true:warning

###############################
# C# Formatting Rules         #
###############################

# New line preferences
csharp_new_line_before_open_brace = all
csharp_new_line_before_else = true:warning
csharp_new_line_before_catch = true:warning
csharp_new_line_before_finally = true:warning
csharp_new_line_before_members_in_object_initializers = true:warning
csharp_new_line_before_members_in_anonymous_types = true:warning
csharp_new_line_between_query_expression_clauses = true:warning

# Indentation preferences
csharp_indent_case_contents = true:warning
csharp_indent_switch_labels = true:warning
csharp_indent_labels = no_change

# Space preferences
csharp_space_after_cast = false:suggestion
csharp_space_after_keywords_in_control_flow_statements = true:warning
csharp_space_between_method_call_parameter_list_parentheses = false:warning
csharp_space_between_method_declaration_parameter_list_parentheses = false:suggestion
csharp_space_between_parentheses = false
csharp_space_before_colon_in_inheritance_clause = true:warning
csharp_space_after_colon_in_inheritance_clause = true:warning
csharp_space_around_binary_operators = before_and_after:suggestion
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false:warning
csharp_space_between_method_call_name_and_opening_parenthesis = false:warning
csharp_space_between_method_call_empty_parameter_list_parentheses = false:warning

# Wrapping preferences
csharp_preserve_single_line_statements = true:warning
csharp_preserve_single_line_blocks = true:warning

##################################
# Visual Basic Code Style Rules  #
##################################

[*.vb]
# Modifier preferences
visual_basic_preferred_modifier_order = Partial,Default,Private,Protected,Public,Friend,NotOverridable,Overridable,MustOverride,Overloads,Overrides,MustInherit,NotInheritable,Static,Shared,Shadows,ReadOnly,WriteOnly,Dim,Const,WithEvents,Widening,Narrowing,Custom,Async:suggestion